DISABLE_MAGIC_FUNCTIONS=true # disable magic functions
fpath=(~/.zsh/completion $fpath) # add custom completions
autoload -U +X compinit && compinit # load completions
autoload -U +X bashcompinit && bashcompinit # load bash completions
setopt histignorespace # ignore commands that start with a space
set -o vi
bindkey '^H' backward-kill-word # Ctrl + Backspace (delete word)
bindkey '^[[1;5D' backward-word # Ctrl + Left Arrow (move word left)
bindkey '^[[1;5C' forward-word # Ctrl + Right Arrow (move word right)
bindkey -e # use emacs keybindings

eval "$(fasd --init auto)" # init fasd

alias ls="eza -l --group-directories-first -s type --git"
alias r='cd $(git rev-parse --show-toplevel)' # go to git root
alias g='git'
alias k='kubectl'
alias cat='bat'
alias rg="rg --hidden"
alias yt="youtube-dl"

# fd is fdfind in linux `apt install fd-find`
if [[ `uname` == "Linux" ]]; then
  alias fd='fdfind'
fi

# make dir and enter it
function mkc() {
  mkdir -p "$@" && cd "$@"
}

# fasd & fzf change directory - jump using `fasd` if given argument, filter output of `fasd` using `fzf` else
function z() {
  local dir
  dir="$(fasd -Rdl "$1" | fzf -1 -0 --no-sort +m)" && cd "${dir}" || return 1
}

export MANPATH="/usr/local/man:$MANPATH"
export EDITOR=$(which nvim)
export DOCKER_BUILDKIT=1
export GOPATH=$HOME/go
export FZF_DEFAULT_COMMAND="fd --type f"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
export GPG_TTY=$(tty)
export PATH=$PATH:/usr/local/go/bin # ubuntu go installation
export PATH=$PATH:~/.local/bin # windows custom bin path
export PATH="$HOME/.yarn/bin:$PATH"
export PATH="$HOME/n/bin:$PATH"
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:/usr/local/opt/go/libexec/bin
export PATH=$PATH:/Applications/Postgres.app/Contents/Versions/latest/bin
export PATH=$PATH:/Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin
export PATH="/usr/local/Cellar/gnu-getopt/1.1.6/bin":$PATH # Use gnu getopts
export N_PREFIX="$HOME/n"; [[ :$PATH: == *":$N_PREFIX/bin:"* ]] || PATH+=":$N_PREFIX/bin"  # Added by n-install (see http://git.io/n-install-repo).
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
export NIX_PATH=$HOME/.nix-defexpr/channels${NIX_PATH:+:}$NIX_PATH # nix HOME MANAGER
export DIRENV_LOG_FORMAT="" # disable direnv logging

[[ -e ~/.ssh/github_rsa ]] && ssh-add ~/.ssh/github_rsa # automatically add non default ssh keys

# Base16 Shell
BASE16_SHELL="$HOME/.config/base16-shell/"
[ -n "$PS1" ] && \
    [ -s "$BASE16_SHELL/profile_helper.sh" ] && \
        source "$BASE16_SHELL/profile_helper.sh"

# This is sourced in home.nix
# zsh prompt expansions
# http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html#Prompt-Expansion
#
# %3c                 - 3 ancestors + cwd
# $(__gitrps1)        - invoke output from ./git-prompt.sh, which should be sourced by zshrc before this file
[[ -f "$HOME/.bin/zsh-kubectl-prompt/kubectl.zsh" ]] && source "$HOME/.bin/zsh-kubectl-prompt/kubectl.zsh"
GIT_PS1_SHOWDIRTYSTATE=true
PROMPT='%{$fg[magenta]%}%3c%{$fg[green]%} $(__git_ps1) (%{$fg[green]%}$ZSH_KUBECTL_PROMPT) %{$fg[magenta]%}
$ %{$reset_color%}'

[[ -f ~/.dotfiles/secrets/env ]] && source ~/.dotfiles/secrets/env

# NIX HOME MANAGER
source "$HOME/.nix-profile/etc/profile.d/hm-session-vars.sh"

if [ -e $HOME/.nix-profile/etc/profile.d/nix.sh ]; then . $HOME/.nix-profile/etc/profile.d/nix.sh; fi # added by Nix installer
eval "$(direnv hook zsh)"

# tmux ssh session
if [[ -n "$PS1" ]] && [[ -z "$TMUX" ]] && [[ -n "$SSH_CONNECTION" ]]; then
  tmux attach-session -t ssh_tmux || tmux new-session -s ssh_tmux
fi
