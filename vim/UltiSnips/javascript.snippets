################################################
#					General					   #
################################################

snippet require
, $1 = require('$1')
endsnippet



snippet print
console.log($1);
endsnippet



snippet nprint
console.log('\n\n', $1, '\n\n');
endsnippet



snippet func
function ${1:name}(${2:args}) {
	${3:body}
}
endsnippet



snippet ifun
;(function() {
	'use strict';

	$1

}());
endsnippet



snippet for
for (var ${1:i} = 0; ${1:i}<$2; ${1:i}++) {
	$0
}
endsnippet



snippet forin
for (var $1 in $2) {
	$3
}
endsnippet



snippet iife
(function() {
	$1
})();
endsnippet



snippet pfn
$1.prototype.$2 = function($3) {
	$0
};
endsnippet



snippet extend
$1.prototype = Object.create($2.prototype);
$1.prototype.constructor = $1;
endsnippet



snippet =
($1) => {
	$0
}
endsnippet



################################################
#					Angular					   #
################################################

snippet module
angular.module('$1', [$2]);
endsnippet



snippet run
angular.module('$1')
	.run([
		$2Run
	]);

function $2Run() {
	$0
}
endsnippet



snippet config
angular.module('$1')
	.config([
		$2Config
	]);

function $2Config() {
	$0
}
endsnippet



snippet controller
angular.module('$1')
	.controller('$2', [
		'$3',
		$2Ctrl
	]);

function $2Ctrl($3) {
	$4
}
endsnippet



snippet filter
angular.module('$1')
	.filter('$2', [
		'$3',
		$2Filter
	]);

function $2Filter($3) {
	return function($3) {
		$4
	}
}
endsnippet



snippet directive
angular.module('$1')
	.directive('$2', [
		function () {
			return {
				restrict: 'E',
				link: linkFunc
			}
		}
	]);

function linkFunc(scope, elem, attrs) {
	$3
}
endsnippet



snippet factory
angular.module('$1')
	.factory('$2', [
		'$3',
		$2Factory
	]);

function $2Factory($3) {
	$0
}
endsnippet



################################################
#					Node					   #
################################################


snippet init
'use strict';

// Dependencies
var path = require('path');
// App Dependencies
var config = rootRequire('config')
	, debug = require('debug')(config.debugTag + ':' + path.basename(__dirname) + ':'
								+ path.basename(__filename));

$0
endsnippet



snippet router
'use strict';

// Dependencies
var path = require('path')
    , fs = require('fs')
    , express = require('express');
// App Dependencies
var config = rootRequire('config')
	, debug = require('debug')(config.debugTag + ':' + path.basename(__dirname)
								+ ':' + path.basename(__filename));

module.exports = function() {

    var router = express.Router();

	$0

    return router;

}
endsnippet



snippet fs
fs.readdirSync(path.resolve($1)).forEach(function(file) {
	var excludes = /^(\.)/;
	if (excludes.test(file)) return;

	var childpath = path.resolve($1, file);
	$0
});
endsnippet




################################################
#					React					   #
################################################



snippet rclass
var $1 = React.createClass({
	render() {
		return (
			$0
		);
	}
});
endsnippet



################################################
#					Misc					   #
################################################


snippet leetcode
'use strict';

function $1() {

}

console.log($1());
endsnippet
