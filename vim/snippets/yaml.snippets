snippet service
[Unit]
Description=Foo
After=foo.service
Wants=foo.service

[Service]
ExecStart=

[Install]
WantedBy=multi-user.target
endsnippet

snippet pod
apiVersion: v1
kind: Pod
metadata:
	name: $1
	labels:
		app: $1
spec:
	containers:
		- name: $1
		  image: $2
			args:
				- "-http=0.0.0.0:80"
				- "-health=0.0.0.0:81"
		  ports:
				- name: http
					containerPort: 80
				- name: health
					containerPort: 81
			resources:
				limits:
					cpu: 0.2
					memory: "10Mi"
endsnippet

snippet dockerinit
version: "3"

services:
	$0
endsnippet

snippet argo
apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: $1-
spec:
  entrypoint: whalesay
  templates:
  - name: whalesay
    container:
      image: docker/whalesay
      command: [cowsay]
      args: ["hello world"]
endsnippet

snippet kinit
apiVersion: v1
kind: $1
metadata:
	$0
endsnippet

snippet kservice
apiVersion: v1
kind: Service
metadata:
  name: my-service
spec:
  selector:
    app: MyApp
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9376
endsnippet

snippet kdeployment
apiVersion: apps/v1
kind: Deployment
metadata:
	name: nginx-deployment
	labels:
		app: nginx
spec:
	replicas: 3
	selector:
		matchLabels:
			app: nginx
	template:
		metadata:
			labels:
				app: nginx
		spec:
			containers:
			- name: nginx
				image: nginx:1.7.9
				ports:
				- containerPort: 80
endsnippet

snippet kconfig
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-grafana-datasource
  namespace: monitoring
  labels:
    grafana_datasource: '1'
data:
  datasource.yaml: |-
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      orgId: 1
      url: http://prometheus-server.monitoring.svc.cluster.local
endsnippet
